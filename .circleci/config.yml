version: 2.0

jobs:
  compile:
    docker:
      - image: circleci/clojure:lein-2.7.1
    working_directory: /home/circleci/realworld-backend
    steps:
      - checkout
      - restore_cache:
          keys:
            - realworld-backend-{{ checksum "project.clj" }}-{{ checksum "environments/development/project.clj" }}
            - realworld-backend-
            - polylith-cache-
      - restore_cache:
          keys:
            - polylith-cache-
      - run:
          name: Print workspace info
          command: lein polylith info
      - run:
          name: Compile changed projects
          command: lein polylith compile
      - save_cache:
          key: realworld-backend-{{ checksum "project.clj" }}-{{ checksum "environments/development/project.clj" }}
          paths:
            - /home/circleci/.m2
            - /home/circleci/.lein
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - .m2
            - .lein
            - realworld-backend
  test:
    docker:
      - image: circleci/clojure:lein-2.7.1
    working_directory: /home/circleci/realworld-backend
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Test changed projects
          command: lein polylith test -compile
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - .m2
            - .lein
            - realworld-backend

  build:
    docker:
      - image: circleci/clojure:lein-2.7.1
    working_directory: /home/circleci/realworld-backend
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Build changed projects
          command: lein polylith build -compile -test -success
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - .m2
            - .lein
            - realworld-backend

  artifacts:
    machine:
      enabled: true
    working_directory: /home/circleci/realworld-backend
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Find built systems, print to console and move to artifacts
          command: |
            mkdir -p artifacts

            built_systems=`lein polylith changes s`

            echo $built_systems

            for system in $built_systems; do
              artifact="systems/""$system""/target/""$system"".war"
              cp $artifact artifacts/.
            done
      - store_artifacts:
          path: artifacts
          destination: artifacts
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - .m2
            - .lein
            - realworld-backend

  success:
    docker:
      - image: circleci/clojure:lein-2.7.1
    working_directory: /home/circleci/realworld-backend
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Set new :last-successful-build
          command: lein polylith success
      - save_cache:
          key: polylith-cache-{{ checksum ".polylith/time.local.edn" }}
          paths:
            - /home/circleci/realworld-backend/.polylith

workflows:
  version: 2
  test-build-success:
    jobs:
      - compile
      - test:
          requires:
            - compile
      - build:
          requires:
            - test
      - artifacts:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - develop
      - success:
          requires:
            - artifacts
          filters:
            branches:
              only:
                - master
                - develop
